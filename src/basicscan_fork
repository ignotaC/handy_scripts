#!/bin/ksh

#
#
# Copyright (c) 2023 Piotr Trzpil  p.trzpil@protonmail.com
#
# Permission to use, copy, modify, and distribute 
# this software for any purpose with or without fee
# is hereby granted, provided that the above copyright
# notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR
# DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE
# INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE
# FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS
# OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF
# CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
# OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
# OF THIS SOFTWARE.
#
#

sun_load="$1" 
sun_ans="$2" 
forkscript="$3"
opt="$4"

tf="$( mktemp )"
tf2="$( mktemp )"

#TODO think what shnd_data should do on connection read error.
# it could output data after succesful read or stream it and risk shit will be left after error

# Option sets how we use our data
PASS_DATA_AS_ARG=0
[[ $opt == '-o' ]] && PASS_DATA_AS_ARG=1

data=''

while true
do

 #get data we break on error because we assume data has ended
 if (( $PASS_DATA_AS_ARG ))
  then
    data="$( nc -U "$sun_load" )" || break
  else
    nc -U "$sun_load" > "$tf" || break
  fi

  # TODO DO, what if we want to pass "$tf" to our script as option
  #run script, use wordsplit here
  while true
  do

    if (( $PASS_DATA_AS_ARG ))
    then
      eval "$forkscript"' '"$data"  > "$tf2" && break
    else
      eval "$forkscript" < "$tf" > "$tf2" && break
    fi

  done

  # send crafted data back
  while true
  do

    nc -UN "$sun_ans" < "$tf2" && break

  done

done



