#!/bin/ksh

if (( "$#" < 1 ))
then
  printf "%s\n" "Provide at least url"
  printf "%s\n\n" "Syntax: getpage [option] [url]"
  printf "%s\n" "-d"
  printf "\t%s\n" "Disable https, use http. Still if server will"
  printf "\t%s\n" "point on 301 to https, https will be turned on and used"
  printf "%s\n" "-i IP"
  printf "\t%s\n" "Pass IP of the server."
  printf "\t%s\n" "Thanks to this there is no need for resolving IP of domain."
  printf "\t%s\n" "This can be also usefull if we know the real IP of server."
  printf "\t%s\n" "So we can bypass cloudflare sillyness, for example."
  printf "%s\n" "-p port"
  printf "\t%s\n" "Pass port http server is expected to use"
  printf "\t%s\n" "Default is: Http = 80, https = 443"
  printf "%s\n" "-t TORport"
  printf "\t%s\n" "Since you can multiply tor daemons on ports."
  printf "\t%s\n" "This options allows you to use which ever you want."
  printf "\t%s\n" "Default is 9050."
  printf "%s\n" "-C cookie"
  printf "\t%s\n" "Pass cookie lines, multiply lines are fine but,"
  printf "\t%s\n" "You need to create whole cookie header line, like this:"
  printf "\t\t%s\n" "Cookie: some=stuff"
  printf "%s\n" "-U user-agent"
  printf "\t%s\n" "Define what ever user agent you want to use"
  exit
fi

ua='' # if not set let it be empty, it should be set at all times anyway
cookie=''
IP='' 
port=''
TORport='9050' #that is default, ofc you need tor daemon enabled
httpsON=1

while getopts di:p:t:C:U: optchr
do

  case "$optchr" in
    d) httpsON=0 ;;
    i) IP="$OPTARG" ;;
    p) port="$OPTARG" ;;
    t) TORport="$OPTARG" ;;
    C) cookie="$OPTARG" ;;
    U) ua="$OPTARG" ;;
    ?) exit ;;
  esac

done
 
shift $(($OPTIND - 1))
if (( $# != 1 ))
then

  printf "Broken commands or url"
  exit

fi

#echo "ostatnie:  $@"
#printf "IP=%s\n" "$IP"
#printf "httpsON=%s\n" "$httpsON"
#printf "port=%s\n" "$port"
#printf "TORport=%s\n" "$TORport"
#printf "cookie=%s\n" "$cookie"
#printf "ua=%s\n" "$ua"


url="$@"

setreq() {

host="${url#*//}"
host="${host%%/*}"

if (( "$httpsON" ))
then
  httpscmd[0]='-c'
  httpscmd[1]='-e'
  httpscmd[2]="$host"
fi

path="${url#*//}"
if [[ "$path" == */* ]]
then
  path="${path#*/}"
  path='/'"$path"
else
  path='/'
fi

}

setreq

#resolv empty
if [ ! "$IP" ]
then
  IP=$( tor-resolve "$host" )
fi

if (( "$httpsON" ))
then
  if [ ! "$port" ]
  then
    port=443
  fi
else
  if [ ! "$port" ]
  then
    port=80
  fi
fi

req() {

printf "GET %s HTTP/1.0\n" "$path"
printf "Host: %s\n" "$host"
printf "User-Agent: %s\n" "$ua"
printf "%s\n" "$cookie"
printf  "%s\n" 'Accept: text/html,application/xhtml+xml'\
',application/xml;q=0.9,image/webp,*/*;q=0.8'
printf "%s\n" 'Accept-Language: en-US,en;q=0.5'

}

tempfile=$( mktemp )
tempfile2=$( mktemp )

while true
do
 
  req | httpreq_addcrlf |
  nc -w '10' "${httpscmd[@]}" -X '5' -x 'localhost:'"$TORport" "$IP" "$port" > "$tempfile"
  cat "$tempfile" | httphb_split -h > "$tempfile2"
  status_code=$( head -n 1 "$tempfile2" )
  if [[ "$status_code" == *301* ]]
  then

	  url=$( cat "$tempfile2" | strext -c 'Location: ' '' | tr -d '\r\n' )
	  if (( "$httpsON" == 0 ))
	  then
		 if [[ 'https' == "${url%%://*}" ]] 
		 then 
			 httpsON=1
			 if [ ! "$port" ]
			 then
				 port=443
			 fi
		 fi
	  fi


          setreq
          if [ ! "$IP" ]
          then
            IP=$( tor-resolve "$host" )
          fi
	  continue

  fi
  break

done

cat "$tempfile"
rm -f "$tempfile" "$tempfile2"
